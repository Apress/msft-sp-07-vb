'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.42
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
'
Namespace MOSSService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WebsSoap", [Namespace]:="http://schemas.microsoft.com/sharepoint/soap/")>  _
    Partial Public Class Webs
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetWebCollectionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetWebOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetListTemplatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllSubWebCollectionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebUrlFromPageUrlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetContentTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetContentTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateContentTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateContentTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteContentTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateContentTypeXmlDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveContentTypeXmlDocumentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetColumnsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateColumnsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCustomizedPageStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RevertFileContentStreamOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RevertAllFileContentStreamsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CustomizeCssOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RevertCssOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetActivatedFeaturesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.SiteExplorer.My.MySettings.Default.SiteExplorer_MOSSService_Webs
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetWebCollectionCompleted As GetWebCollectionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetWebCompleted As GetWebCompletedEventHandler
        
        '''<remarks/>
        Public Event GetListTemplatesCompleted As GetListTemplatesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllSubWebCollectionCompleted As GetAllSubWebCollectionCompletedEventHandler
        
        '''<remarks/>
        Public Event WebUrlFromPageUrlCompleted As WebUrlFromPageUrlCompletedEventHandler
        
        '''<remarks/>
        Public Event GetContentTypesCompleted As GetContentTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetContentTypeCompleted As GetContentTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateContentTypeCompleted As CreateContentTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateContentTypeCompleted As UpdateContentTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteContentTypeCompleted As DeleteContentTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateContentTypeXmlDocumentCompleted As UpdateContentTypeXmlDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveContentTypeXmlDocumentCompleted As RemoveContentTypeXmlDocumentCompletedEventHandler
        
        '''<remarks/>
        Public Event GetColumnsCompleted As GetColumnsCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateColumnsCompleted As UpdateColumnsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCustomizedPageStatusCompleted As GetCustomizedPageStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event RevertFileContentStreamCompleted As RevertFileContentStreamCompletedEventHandler
        
        '''<remarks/>
        Public Event RevertAllFileContentStreamsCompleted As RevertAllFileContentStreamsCompletedEventHandler
        
        '''<remarks/>
        Public Event CustomizeCssCompleted As CustomizeCssCompletedEventHandler
        
        '''<remarks/>
        Public Event RevertCssCompleted As RevertCssCompletedEventHandler
        
        '''<remarks/>
        Public Event GetActivatedFeaturesCompleted As GetActivatedFeaturesCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetWebCollection", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWebCollection() As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetWebCollection", New Object(-1) {})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetWebCollectionAsync()
            Me.GetWebCollectionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetWebCollectionAsync(ByVal userState As Object)
            If (Me.GetWebCollectionOperationCompleted Is Nothing) Then
                Me.GetWebCollectionOperationCompleted = AddressOf Me.OnGetWebCollectionOperationCompleted
            End If
            Me.InvokeAsync("GetWebCollection", New Object(-1) {}, Me.GetWebCollectionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetWebCollectionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetWebCollectionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetWebCollectionCompleted(Me, New GetWebCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetWeb", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWeb(ByVal webUrl As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetWeb", New Object() {webUrl})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetWebAsync(ByVal webUrl As String)
            Me.GetWebAsync(webUrl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetWebAsync(ByVal webUrl As String, ByVal userState As Object)
            If (Me.GetWebOperationCompleted Is Nothing) Then
                Me.GetWebOperationCompleted = AddressOf Me.OnGetWebOperationCompleted
            End If
            Me.InvokeAsync("GetWeb", New Object() {webUrl}, Me.GetWebOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetWebOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetWebCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetWebCompleted(Me, New GetWebCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetListTemplates", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetListTemplates() As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetListTemplates", New Object(-1) {})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetListTemplatesAsync()
            Me.GetListTemplatesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetListTemplatesAsync(ByVal userState As Object)
            If (Me.GetListTemplatesOperationCompleted Is Nothing) Then
                Me.GetListTemplatesOperationCompleted = AddressOf Me.OnGetListTemplatesOperationCompleted
            End If
            Me.InvokeAsync("GetListTemplates", New Object(-1) {}, Me.GetListTemplatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetListTemplatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetListTemplatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetListTemplatesCompleted(Me, New GetListTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetAllSubWebCollection", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllSubWebCollection() As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetAllSubWebCollection", New Object(-1) {})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllSubWebCollectionAsync()
            Me.GetAllSubWebCollectionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllSubWebCollectionAsync(ByVal userState As Object)
            If (Me.GetAllSubWebCollectionOperationCompleted Is Nothing) Then
                Me.GetAllSubWebCollectionOperationCompleted = AddressOf Me.OnGetAllSubWebCollectionOperationCompleted
            End If
            Me.InvokeAsync("GetAllSubWebCollection", New Object(-1) {}, Me.GetAllSubWebCollectionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllSubWebCollectionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllSubWebCollectionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllSubWebCollectionCompleted(Me, New GetAllSubWebCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/WebUrlFromPageUrl", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebUrlFromPageUrl(ByVal pageUrl As String) As String
            Dim results() As Object = Me.Invoke("WebUrlFromPageUrl", New Object() {pageUrl})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebUrlFromPageUrlAsync(ByVal pageUrl As String)
            Me.WebUrlFromPageUrlAsync(pageUrl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebUrlFromPageUrlAsync(ByVal pageUrl As String, ByVal userState As Object)
            If (Me.WebUrlFromPageUrlOperationCompleted Is Nothing) Then
                Me.WebUrlFromPageUrlOperationCompleted = AddressOf Me.OnWebUrlFromPageUrlOperationCompleted
            End If
            Me.InvokeAsync("WebUrlFromPageUrl", New Object() {pageUrl}, Me.WebUrlFromPageUrlOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebUrlFromPageUrlOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebUrlFromPageUrlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebUrlFromPageUrlCompleted(Me, New WebUrlFromPageUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetContentTypes", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetContentTypes() As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetContentTypes", New Object(-1) {})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetContentTypesAsync()
            Me.GetContentTypesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetContentTypesAsync(ByVal userState As Object)
            If (Me.GetContentTypesOperationCompleted Is Nothing) Then
                Me.GetContentTypesOperationCompleted = AddressOf Me.OnGetContentTypesOperationCompleted
            End If
            Me.InvokeAsync("GetContentTypes", New Object(-1) {}, Me.GetContentTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetContentTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetContentTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetContentTypesCompleted(Me, New GetContentTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetContentType", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetContentType(ByVal contentTypeId As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetContentType", New Object() {contentTypeId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetContentTypeAsync(ByVal contentTypeId As String)
            Me.GetContentTypeAsync(contentTypeId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetContentTypeAsync(ByVal contentTypeId As String, ByVal userState As Object)
            If (Me.GetContentTypeOperationCompleted Is Nothing) Then
                Me.GetContentTypeOperationCompleted = AddressOf Me.OnGetContentTypeOperationCompleted
            End If
            Me.InvokeAsync("GetContentType", New Object() {contentTypeId}, Me.GetContentTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetContentTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetContentTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetContentTypeCompleted(Me, New GetContentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/CreateContentType", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateContentType(ByVal displayName As String, ByVal parentType As String, ByVal newFields As System.Xml.XmlNode, ByVal contentTypeProperties As System.Xml.XmlNode) As String
            Dim results() As Object = Me.Invoke("CreateContentType", New Object() {displayName, parentType, newFields, contentTypeProperties})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateContentTypeAsync(ByVal displayName As String, ByVal parentType As String, ByVal newFields As System.Xml.XmlNode, ByVal contentTypeProperties As System.Xml.XmlNode)
            Me.CreateContentTypeAsync(displayName, parentType, newFields, contentTypeProperties, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateContentTypeAsync(ByVal displayName As String, ByVal parentType As String, ByVal newFields As System.Xml.XmlNode, ByVal contentTypeProperties As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.CreateContentTypeOperationCompleted Is Nothing) Then
                Me.CreateContentTypeOperationCompleted = AddressOf Me.OnCreateContentTypeOperationCompleted
            End If
            Me.InvokeAsync("CreateContentType", New Object() {displayName, parentType, newFields, contentTypeProperties}, Me.CreateContentTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateContentTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateContentTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateContentTypeCompleted(Me, New CreateContentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/UpdateContentType", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateContentType(ByVal contentTypeId As String, ByVal contentTypeProperties As System.Xml.XmlNode, ByVal newFields As System.Xml.XmlNode, ByVal updateFields As System.Xml.XmlNode, ByVal deleteFields As System.Xml.XmlNode) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("UpdateContentType", New Object() {contentTypeId, contentTypeProperties, newFields, updateFields, deleteFields})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateContentTypeAsync(ByVal contentTypeId As String, ByVal contentTypeProperties As System.Xml.XmlNode, ByVal newFields As System.Xml.XmlNode, ByVal updateFields As System.Xml.XmlNode, ByVal deleteFields As System.Xml.XmlNode)
            Me.UpdateContentTypeAsync(contentTypeId, contentTypeProperties, newFields, updateFields, deleteFields, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateContentTypeAsync(ByVal contentTypeId As String, ByVal contentTypeProperties As System.Xml.XmlNode, ByVal newFields As System.Xml.XmlNode, ByVal updateFields As System.Xml.XmlNode, ByVal deleteFields As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.UpdateContentTypeOperationCompleted Is Nothing) Then
                Me.UpdateContentTypeOperationCompleted = AddressOf Me.OnUpdateContentTypeOperationCompleted
            End If
            Me.InvokeAsync("UpdateContentType", New Object() {contentTypeId, contentTypeProperties, newFields, updateFields, deleteFields}, Me.UpdateContentTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateContentTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateContentTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateContentTypeCompleted(Me, New UpdateContentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/DeleteContentType", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteContentType(ByVal contentTypeId As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("DeleteContentType", New Object() {contentTypeId})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteContentTypeAsync(ByVal contentTypeId As String)
            Me.DeleteContentTypeAsync(contentTypeId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteContentTypeAsync(ByVal contentTypeId As String, ByVal userState As Object)
            If (Me.DeleteContentTypeOperationCompleted Is Nothing) Then
                Me.DeleteContentTypeOperationCompleted = AddressOf Me.OnDeleteContentTypeOperationCompleted
            End If
            Me.InvokeAsync("DeleteContentType", New Object() {contentTypeId}, Me.DeleteContentTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteContentTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteContentTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteContentTypeCompleted(Me, New DeleteContentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/UpdateContentTypeXmlDocument", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateContentTypeXmlDocument(ByVal contentTypeId As String, ByVal newDocument As System.Xml.XmlNode) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("UpdateContentTypeXmlDocument", New Object() {contentTypeId, newDocument})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateContentTypeXmlDocumentAsync(ByVal contentTypeId As String, ByVal newDocument As System.Xml.XmlNode)
            Me.UpdateContentTypeXmlDocumentAsync(contentTypeId, newDocument, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateContentTypeXmlDocumentAsync(ByVal contentTypeId As String, ByVal newDocument As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.UpdateContentTypeXmlDocumentOperationCompleted Is Nothing) Then
                Me.UpdateContentTypeXmlDocumentOperationCompleted = AddressOf Me.OnUpdateContentTypeXmlDocumentOperationCompleted
            End If
            Me.InvokeAsync("UpdateContentTypeXmlDocument", New Object() {contentTypeId, newDocument}, Me.UpdateContentTypeXmlDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateContentTypeXmlDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateContentTypeXmlDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateContentTypeXmlDocumentCompleted(Me, New UpdateContentTypeXmlDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/RemoveContentTypeXmlDocument", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemoveContentTypeXmlDocument(ByVal contentTypeId As String, ByVal documentUri As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("RemoveContentTypeXmlDocument", New Object() {contentTypeId, documentUri})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemoveContentTypeXmlDocumentAsync(ByVal contentTypeId As String, ByVal documentUri As String)
            Me.RemoveContentTypeXmlDocumentAsync(contentTypeId, documentUri, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveContentTypeXmlDocumentAsync(ByVal contentTypeId As String, ByVal documentUri As String, ByVal userState As Object)
            If (Me.RemoveContentTypeXmlDocumentOperationCompleted Is Nothing) Then
                Me.RemoveContentTypeXmlDocumentOperationCompleted = AddressOf Me.OnRemoveContentTypeXmlDocumentOperationCompleted
            End If
            Me.InvokeAsync("RemoveContentTypeXmlDocument", New Object() {contentTypeId, documentUri}, Me.RemoveContentTypeXmlDocumentOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveContentTypeXmlDocumentOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveContentTypeXmlDocumentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveContentTypeXmlDocumentCompleted(Me, New RemoveContentTypeXmlDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetColumns", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetColumns() As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetColumns", New Object(-1) {})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetColumnsAsync()
            Me.GetColumnsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetColumnsAsync(ByVal userState As Object)
            If (Me.GetColumnsOperationCompleted Is Nothing) Then
                Me.GetColumnsOperationCompleted = AddressOf Me.OnGetColumnsOperationCompleted
            End If
            Me.InvokeAsync("GetColumns", New Object(-1) {}, Me.GetColumnsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetColumnsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetColumnsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetColumnsCompleted(Me, New GetColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/UpdateColumns", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateColumns(ByVal newFields As System.Xml.XmlNode, ByVal updateFields As System.Xml.XmlNode, ByVal deleteFields As System.Xml.XmlNode) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("UpdateColumns", New Object() {newFields, updateFields, deleteFields})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateColumnsAsync(ByVal newFields As System.Xml.XmlNode, ByVal updateFields As System.Xml.XmlNode, ByVal deleteFields As System.Xml.XmlNode)
            Me.UpdateColumnsAsync(newFields, updateFields, deleteFields, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateColumnsAsync(ByVal newFields As System.Xml.XmlNode, ByVal updateFields As System.Xml.XmlNode, ByVal deleteFields As System.Xml.XmlNode, ByVal userState As Object)
            If (Me.UpdateColumnsOperationCompleted Is Nothing) Then
                Me.UpdateColumnsOperationCompleted = AddressOf Me.OnUpdateColumnsOperationCompleted
            End If
            Me.InvokeAsync("UpdateColumns", New Object() {newFields, updateFields, deleteFields}, Me.UpdateColumnsOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateColumnsOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateColumnsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateColumnsCompleted(Me, New UpdateColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetCustomizedPageStatus", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCustomizedPageStatus(ByVal fileUrl As String) As CustomizedPageStatus
            Dim results() As Object = Me.Invoke("GetCustomizedPageStatus", New Object() {fileUrl})
            Return CType(results(0),CustomizedPageStatus)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCustomizedPageStatusAsync(ByVal fileUrl As String)
            Me.GetCustomizedPageStatusAsync(fileUrl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCustomizedPageStatusAsync(ByVal fileUrl As String, ByVal userState As Object)
            If (Me.GetCustomizedPageStatusOperationCompleted Is Nothing) Then
                Me.GetCustomizedPageStatusOperationCompleted = AddressOf Me.OnGetCustomizedPageStatusOperationCompleted
            End If
            Me.InvokeAsync("GetCustomizedPageStatus", New Object() {fileUrl}, Me.GetCustomizedPageStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCustomizedPageStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCustomizedPageStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCustomizedPageStatusCompleted(Me, New GetCustomizedPageStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/RevertFileContentStream", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RevertFileContentStream(ByVal fileUrl As String)
            Me.Invoke("RevertFileContentStream", New Object() {fileUrl})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RevertFileContentStreamAsync(ByVal fileUrl As String)
            Me.RevertFileContentStreamAsync(fileUrl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RevertFileContentStreamAsync(ByVal fileUrl As String, ByVal userState As Object)
            If (Me.RevertFileContentStreamOperationCompleted Is Nothing) Then
                Me.RevertFileContentStreamOperationCompleted = AddressOf Me.OnRevertFileContentStreamOperationCompleted
            End If
            Me.InvokeAsync("RevertFileContentStream", New Object() {fileUrl}, Me.RevertFileContentStreamOperationCompleted, userState)
        End Sub
        
        Private Sub OnRevertFileContentStreamOperationCompleted(ByVal arg As Object)
            If (Not (Me.RevertFileContentStreamCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RevertFileContentStreamCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/RevertAllFileContentStreams", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RevertAllFileContentStreams()
            Me.Invoke("RevertAllFileContentStreams", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RevertAllFileContentStreamsAsync()
            Me.RevertAllFileContentStreamsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RevertAllFileContentStreamsAsync(ByVal userState As Object)
            If (Me.RevertAllFileContentStreamsOperationCompleted Is Nothing) Then
                Me.RevertAllFileContentStreamsOperationCompleted = AddressOf Me.OnRevertAllFileContentStreamsOperationCompleted
            End If
            Me.InvokeAsync("RevertAllFileContentStreams", New Object(-1) {}, Me.RevertAllFileContentStreamsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRevertAllFileContentStreamsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RevertAllFileContentStreamsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RevertAllFileContentStreamsCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/CustomizeCss", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub CustomizeCss(ByVal cssFile As String)
            Me.Invoke("CustomizeCss", New Object() {cssFile})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CustomizeCssAsync(ByVal cssFile As String)
            Me.CustomizeCssAsync(cssFile, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CustomizeCssAsync(ByVal cssFile As String, ByVal userState As Object)
            If (Me.CustomizeCssOperationCompleted Is Nothing) Then
                Me.CustomizeCssOperationCompleted = AddressOf Me.OnCustomizeCssOperationCompleted
            End If
            Me.InvokeAsync("CustomizeCss", New Object() {cssFile}, Me.CustomizeCssOperationCompleted, userState)
        End Sub
        
        Private Sub OnCustomizeCssOperationCompleted(ByVal arg As Object)
            If (Not (Me.CustomizeCssCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CustomizeCssCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/RevertCss", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RevertCss(ByVal cssFile As String)
            Me.Invoke("RevertCss", New Object() {cssFile})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RevertCssAsync(ByVal cssFile As String)
            Me.RevertCssAsync(cssFile, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RevertCssAsync(ByVal cssFile As String, ByVal userState As Object)
            If (Me.RevertCssOperationCompleted Is Nothing) Then
                Me.RevertCssOperationCompleted = AddressOf Me.OnRevertCssOperationCompleted
            End If
            Me.InvokeAsync("RevertCss", New Object() {cssFile}, Me.RevertCssOperationCompleted, userState)
        End Sub
        
        Private Sub OnRevertCssOperationCompleted(ByVal arg As Object)
            If (Not (Me.RevertCssCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RevertCssCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/sharepoint/soap/GetActivatedFeatures", RequestNamespace:="http://schemas.microsoft.com/sharepoint/soap/", ResponseNamespace:="http://schemas.microsoft.com/sharepoint/soap/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetActivatedFeatures() As String
            Dim results() As Object = Me.Invoke("GetActivatedFeatures", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetActivatedFeaturesAsync()
            Me.GetActivatedFeaturesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetActivatedFeaturesAsync(ByVal userState As Object)
            If (Me.GetActivatedFeaturesOperationCompleted Is Nothing) Then
                Me.GetActivatedFeaturesOperationCompleted = AddressOf Me.OnGetActivatedFeaturesOperationCompleted
            End If
            Me.InvokeAsync("GetActivatedFeatures", New Object(-1) {}, Me.GetActivatedFeaturesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetActivatedFeaturesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetActivatedFeaturesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetActivatedFeaturesCompleted(Me, New GetActivatedFeaturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://schemas.microsoft.com/sharepoint/soap/")>  _
    Public Enum CustomizedPageStatus
        
        '''<remarks/>
        None
        
        '''<remarks/>
        Uncustomized
        
        '''<remarks/>
        Customized
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetWebCollectionCompletedEventHandler(ByVal sender As Object, ByVal e As GetWebCollectionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetWebCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetWebCompletedEventHandler(ByVal sender As Object, ByVal e As GetWebCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetWebCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetListTemplatesCompletedEventHandler(ByVal sender As Object, ByVal e As GetListTemplatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetListTemplatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetAllSubWebCollectionCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllSubWebCollectionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllSubWebCollectionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub WebUrlFromPageUrlCompletedEventHandler(ByVal sender As Object, ByVal e As WebUrlFromPageUrlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebUrlFromPageUrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetContentTypesCompletedEventHandler(ByVal sender As Object, ByVal e As GetContentTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetContentTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetContentTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetContentTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetContentTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub CreateContentTypeCompletedEventHandler(ByVal sender As Object, ByVal e As CreateContentTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateContentTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub UpdateContentTypeCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateContentTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateContentTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub DeleteContentTypeCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteContentTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteContentTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub UpdateContentTypeXmlDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateContentTypeXmlDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateContentTypeXmlDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub RemoveContentTypeXmlDocumentCompletedEventHandler(ByVal sender As Object, ByVal e As RemoveContentTypeXmlDocumentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemoveContentTypeXmlDocumentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetColumnsCompletedEventHandler(ByVal sender As Object, ByVal e As GetColumnsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetColumnsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub UpdateColumnsCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateColumnsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateColumnsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetCustomizedPageStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetCustomizedPageStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCustomizedPageStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CustomizedPageStatus
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CustomizedPageStatus)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub RevertFileContentStreamCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub RevertAllFileContentStreamsCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub CustomizeCssCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub RevertCssCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")>  _
    Public Delegate Sub GetActivatedFeaturesCompletedEventHandler(ByVal sender As Object, ByVal e As GetActivatedFeaturesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetActivatedFeaturesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
